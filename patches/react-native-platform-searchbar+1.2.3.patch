diff --git a/node_modules/react-native-platform-searchbar/src/components/SearchBar/ios/CancelButton.tsx b/node_modules/react-native-platform-searchbar/src/components/SearchBar/ios/CancelButton.tsx
index 38e71a0..0a7ad6e 100644
--- a/node_modules/react-native-platform-searchbar/src/components/SearchBar/ios/CancelButton.tsx
+++ b/node_modules/react-native-platform-searchbar/src/components/SearchBar/ios/CancelButton.tsx
@@ -15,6 +15,7 @@ type Props = {
     text: string;
     visible: boolean;
     onPress(): void;
+    setComponentWidth?(width: number): void;
     style?: StyleProp<ViewStyle>;
     textStyle?: StyleProp<StyledTextStyle>;
     accessibilityLabel?: string;
@@ -27,6 +28,7 @@ const CancelButton: React.FC<Props> = ({
     textStyle,
     accessibilityLabel = 'cancel',
     onPress,
+    setComponentWidth
 }) => {
     const [width, setWidth] = useState<number>();
     const animationValue = useRef(new Animated.Value(visible ? 1 : 0));
@@ -35,8 +37,7 @@ const CancelButton: React.FC<Props> = ({
         const animation = Animated.timing(animationValue.current, {
             toValue: visible ? 1 : 0,
             useNativeDriver: true,
-            duration: visible ? 250 : 200,
-            delay: visible ? 50 : 0,
+            duration: 200,
             easing: Easing.inOut(Easing.ease),
         });
         animation.start();
@@ -57,17 +58,17 @@ const CancelButton: React.FC<Props> = ({
                         },
                     ],
                 },
-                !visible && styles.notVisible,
                 style,
             ]}
             onLayout={e => {
                 setWidth(e.nativeEvent.layout.width);
+                setComponentWidth?.(e.nativeEvent.layout.width);
             }}
         >
             <Button
                 onPress={onPress}
                 accessibilityLabel={accessibilityLabel}
-                hitSlop={8}
+                hitSlop={16}
             >
                 <StyledText
                     style={[styles.cancelButtonText, textStyle]}
@@ -83,9 +84,9 @@ const CancelButton: React.FC<Props> = ({
 const styles = StyleSheet.create({
     cancelButtonText: {
         color: iosBlue,
-        fontSize: 16,
-    },
-    notVisible: { position: 'absolute', right: 0 },
+        fontSize: 18,
+        paddingHorizontal: 6,
+    }
 });
 
 export default CancelButton;
diff --git a/node_modules/react-native-platform-searchbar/src/components/SearchBar/ios/index.tsx b/node_modules/react-native-platform-searchbar/src/components/SearchBar/ios/index.tsx
index ce60e6e..d497057 100644
--- a/node_modules/react-native-platform-searchbar/src/components/SearchBar/ios/index.tsx
+++ b/node_modules/react-native-platform-searchbar/src/components/SearchBar/ios/index.tsx
@@ -3,8 +3,11 @@ import React, {
     useState,
     forwardRef,
     useImperativeHandle,
+    useLayoutEffect,
 } from 'react';
 import {
+    Animated,
+    Easing,
     LayoutAnimation,
     NativeSyntheticEvent,
     StyleSheet,
@@ -56,6 +59,17 @@ const SearchBar = forwardRef<StyledTextInput | null, SearchBarProps>(
 
         const styles = theme === 'light' ? defaultStyles : darkStyles;
         const [cancelButtonVisible, setCancelButtonVisible] = useState(false);
+        const totalWidth = useRef(0);
+        const cancelButtonWidth = useRef(0);
+        const animatedInputWidth = useRef(new Animated.Value(0)).current;
+        const animateInputWidth = (toValue: number) => {
+            Animated.timing(animatedInputWidth, {
+              toValue,
+              duration: 200,
+              easing: Easing.inOut(Easing.quad),
+              useNativeDriver: false,
+            }).start();
+          };
         const inputRef = useRef<StyledTextInput>(null);
         useImperativeHandle(ref, () => inputRef.current!);
 
@@ -64,9 +78,10 @@ const SearchBar = forwardRef<StyledTextInput | null, SearchBarProps>(
         ) => {
             LayoutAnimation.configureNext({
                 ...LayoutAnimation.Presets.easeInEaseOut,
-                duration: 300,
+                duration: 200,
             });
             setCancelButtonVisible(true);
+            animateInputWidth(totalWidth.current - cancelButtonWidth.current);
             if (onFocus) {
                 onFocus(e);
             }
@@ -90,61 +105,79 @@ const SearchBar = forwardRef<StyledTextInput | null, SearchBarProps>(
             }
             LayoutAnimation.configureNext({
                 ...LayoutAnimation.Presets.easeInEaseOut,
-                duration: 300,
+                duration: 200,
             });
             setCancelButtonVisible(false);
+            animateInputWidth(totalWidth.current);
         };
 
         return (
-            <View style={[styles.wrapper, style]}>
-                <View style={styles.inputWrapper}>
-                    <StyledTextInput
-                        ref={inputRef}
-                        value={value}
-                        clearButtonMode="never"
-                        autoCorrect={false}
-                        onChangeText={onChangeText}
-                        onFocus={handleFocus}
-                        returnKeyType={returnKeyType}
-                        placeholderTextColor={placeholderTextColor}
-                        selectionColor={selectionColor}
-                        accessibilityRole="search"
-                        accessibilityTraits="search"
-                        {...props}
-                        style={[
-                            styles.input,
-                            { paddingHorizontal: 25 + 10 * fontScale },
-                            inputStyle,
-                        ]}
-                    />
-                    <View pointerEvents="box-none" style={styles.children}>
-                        {leftIcon ? (
-                            <View style={styles.leftIcon}>{leftIcon}</View>
-                        ) : (
-                            <SearchIcon
-                                color={iconColor}
-                                style={styles.leftIcon}
-                            />
-                        )}
-                        {children}
-                        {value ? (
-                            <ClearButton
-                                color={iconColor}
-                                onPress={handleClear}
-                                accessibilityLabel={clearAccessibilityLabel}
-                                style={styles.clearButton}
-                            />
-                        ) : undefined}
+            <View
+                style={[styles.wrapper, style]}
+                onLayout={(e) => {
+                    totalWidth.current = e.nativeEvent.layout.width;
+                    if (!cancelButtonVisible) {
+                        animatedInputWidth.setValue(totalWidth.current);
+                    }
+                }}
+            >
+                <Animated.View style={{ width: animatedInputWidth }}>
+                    <View style={[
+                            styles.inputWrapper
+                        ]}>
+                        <StyledTextInput
+                            ref={inputRef}
+                            value={value}
+                            clearButtonMode="never"
+                            autoCorrect={false}
+                            onChangeText={onChangeText}
+                            onFocus={handleFocus}
+                            returnKeyType={returnKeyType}
+                            placeholderTextColor={placeholderTextColor}
+                            selectionColor={selectionColor}
+                            accessibilityRole="search"
+                            {...props}
+                            style={[
+                                styles.input,
+                                { paddingHorizontal: 25 + 10 * fontScale },
+                                inputStyle,
+                            ]}
+                        />
+                        <View pointerEvents="box-none" style={styles.children}>
+                            {leftIcon ? (
+                                <View style={styles.leftIcon}>{leftIcon}</View>
+                            ) : (
+                                <SearchIcon
+                                    color={iconColor}
+                                    style={styles.leftIcon}
+                                />
+                            )}
+                            {children}
+                            {value ? (
+                                <ClearButton
+                                    color={iconColor}
+                                    onPress={handleClear}
+                                    accessibilityLabel={clearAccessibilityLabel}
+                                    style={styles.clearButton}
+                                />
+                            ) : undefined}
+                        </View>
                     </View>
-                </View>
-                <CancelButton
-                    text={cancelText}
-                    visible={cancelButtonVisible}
-                    onPress={handleCancel}
+                </Animated.View>
+                <View
                     style={styles.cancelButton}
-                    textStyle={cancelTextStyle}
-                    accessibilityLabel={cancelAccessibilityLabel}
-                />
+                >
+                    <CancelButton
+                        text={cancelText}
+                        onPress={handleCancel}
+                        textStyle={cancelTextStyle}
+                        accessibilityLabel={cancelAccessibilityLabel}
+                        visible={cancelButtonVisible}
+                        setComponentWidth={(width) => {
+                            cancelButtonWidth.current = width;
+                        }}
+                    />
+                  </View>
             </View>
         );
     }
